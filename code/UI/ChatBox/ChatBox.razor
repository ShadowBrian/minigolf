@inherits Sandbox.UI.Panel
@namespace Facepunch.Minigolf.UI
@attribute [StyleSheet( "/UI/ChatBox/ChatBox.scss" )]

<root>
	<div class="chat_canvas" @ref=Canvas></div>
	<TextEntry @ref=Input></TextEntry>
</root>


@code {

	public static ChatBox Current { get; private set; }
	public Panel Canvas { get; protected set; }
	public TextEntry Input { get; protected set; }

	public ChatBox()
	{
		Current = this;
	}

	protected override void OnAfterTreeRender( bool firstTime )
	{
		base.OnAfterTreeRender( firstTime );

		if ( !firstTime ) 
			return;

		Canvas.PreferScrollToBottom = true;

		Input.AddEventListener( "onsubmit", Submit );
		Input.AddEventListener( "onblur", Close );
		Input.AcceptsFocus = true;
		Input.AllowEmojiReplace = true;
	}

	void Open()
	{
		AddClass( "open" );
		Input.Focus();
	}

	void Close()
	{
		RemoveClass( "open" );
		Input.Blur();
	}

	void Submit()
	{
		Close();

		var msg = Input.Text.Trim();
		Input.Text = "";

		if ( string.IsNullOrWhiteSpace( msg ) )
			return;

		Say( msg );
	}

	public override void Tick()
	{
		if ( Sandbox.Input.Pressed( "chat" ) )
			Open();

		base.Tick();
	}

	public void AddEntry( string name, string message, string avatar )
	{
		var e = Canvas.AddChild<ChatEntry>();
		e.Message.Text = message;
		e.NameLabel.Text = name;
		e.Avatar.SetTexture( avatar );

		e.SetClass( "noname", string.IsNullOrEmpty( name ) );
		e.SetClass( "noavatar", string.IsNullOrEmpty( avatar ) );
		ScrollToBottom();
	}

	// TODO: Maybe needs to be networked or check for other peoples messages 
	private async void ScrollToBottom()
	{
		if ( Canvas.IsScrollAtBottom ) 
			return;
		
		Canvas.TryScroll( 5 );
		await Task.Delay( 100 );
		ScrollToBottom();
	}
}
